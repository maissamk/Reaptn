<?php

namespace ContainerUTIFZ6w;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getImportTranslationsCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'console.command.public_alias.Lexik\Bundle\TranslationBundle\Command\ImportTranslationsCommand' shared autowired service.
     *
     * @return \Lexik\Bundle\TranslationBundle\Command\ImportTranslationsCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'lexik'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'ImportTranslationsCommand.php';

        return $container->services['console.command.public_alias.Lexik\\Bundle\\TranslationBundle\\Command\\ImportTranslationsCommand'] = new \Lexik\Bundle\TranslationBundle\Command\ImportTranslationsCommand(($container->services['translator'] ?? self::getTranslatorService($container)), ($container->services['Lexik\\Bundle\\TranslationBundle\\Manager\\LocaleManager'] ?? $container->load('getLocaleManagerService')), ($container->services['lexik_translation.importer.file'] ?? $container->load('getLexikTranslation_Importer_FileService')));
    }
}
