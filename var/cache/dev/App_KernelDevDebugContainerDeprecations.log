a:15:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:344:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\TranslationBundle\DependencyInjection\LexikTranslationExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:83:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:146;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:354:"Method "Symfony\Component\DependencyInjection\Extension\PrependExtensionInterface::prepend()" might add "void" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\TranslationBundle\DependencyInjection\LexikTranslationExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:83:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:146;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\TranslationBundle\DependencyInjection\Compiler\TranslatorPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:76:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:642;s:8:"function";s:5:"build";s:5:"class";s:53:"Lexik\Bundle\TranslationBundle\LexikTranslationBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\TranslationBundle\DependencyInjection\Compiler\RegisterMappingPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:76:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:642;s:8:"function";s:5:"build";s:5:"class";s:53:"Lexik\Bundle\TranslationBundle\LexikTranslationBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:259:"Method "Symfony\Component\Form\AbstractType::buildForm()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\EmployeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:96:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Method "Symfony\Component\Form\AbstractType::configureOptions()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\EmployeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:96:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:113:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:305;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:119:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:201:"Since doctrine/doctrine-bundle 2.12: The default value of "doctrine.orm.controller_resolver.auto_mapping" will be changed from `true` to `false`. Explicitly configure `true` to keep existing behaviour.";s:4:"file";s:116:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\doctrine\doctrine-bundle\src\DependencyInjection\DoctrineExtension.php";s:4:"line";i:536;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:116:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\doctrine\doctrine-bundle\src\DependencyInjection\DoctrineExtension.php";s:4:"line";i:129;s:8:"function";s:7:"ormLoad";s:5:"class";s:68:"Doctrine\Bundle\DoctrineBundle\DependencyInjection\DoctrineExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:173:"Since doctrine/doctrine-bundle 2.13: Enabling the controller resolver automapping feature has been deprecated. Symfony Mapped Route Parameters should be used as replacement.";s:4:"file";s:116:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\doctrine\doctrine-bundle\src\DependencyInjection\DoctrineExtension.php";s:4:"line";i:541;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:116:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\doctrine\doctrine-bundle\src\DependencyInjection\DoctrineExtension.php";s:4:"line";i:129;s:8:"function";s:7:"ormLoad";s:5:"class";s:68:"Doctrine\Bundle\DoctrineBundle\DependencyInjection\DoctrineExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Lexik\Bundle\TranslationBundle\Command\ImportTranslationsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:96:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Lexik\Bundle\TranslationBundle\Command\ExportTranslationsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:88:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:339;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:96:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:254:"Since symfony/dependency-injection 6.3: Relying on the "@required" annotation on method "Lexik\Bundle\TranslationBundle\Controller\RestController::setRequestStack()" is deprecated, use the "Symfony\Contracts\Service\Attribute\Required" attribute instead.";s:4:"file";s:115:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AutowireRequiredMethodsPass.php";s:4:"line";i:62;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:109:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AbstractRecursivePass.php";s:4:"line";i:90;s:8:"function";s:12:"processValue";s:5:"class";s:74:"Symfony\Component\DependencyInjection\Compiler\AutowireRequiredMethodsPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:254:"Since symfony/dependency-injection 6.3: Relying on the "@required" annotation on method "Lexik\Bundle\TranslationBundle\Controller\RestController::setTokenManager()" is deprecated, use the "Symfony\Contracts\Service\Attribute\Required" attribute instead.";s:4:"file";s:115:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AutowireRequiredMethodsPass.php";s:4:"line";i:62;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:109:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AbstractRecursivePass.php";s:4:"line";i:90;s:8:"function";s:12:"processValue";s:5:"class";s:74:"Symfony\Component\DependencyInjection\Compiler\AutowireRequiredMethodsPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:261:"Since symfony/dependency-injection 6.3: Relying on the "@required" annotation on method "Lexik\Bundle\TranslationBundle\Controller\TranslationController::setRequestStack()" is deprecated, use the "Symfony\Contracts\Service\Attribute\Required" attribute instead.";s:4:"file";s:115:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AutowireRequiredMethodsPass.php";s:4:"line";i:62;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:109:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AbstractRecursivePass.php";s:4:"line";i:90;s:8:"function";s:12:"processValue";s:5:"class";s:74:"Symfony\Component\DependencyInjection\Compiler\AutowireRequiredMethodsPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:261:"Since symfony/dependency-injection 6.3: Relying on the "@required" annotation on method "Lexik\Bundle\TranslationBundle\Controller\TranslationController::setTokenManager()" is deprecated, use the "Symfony\Contracts\Service\Attribute\Required" attribute instead.";s:4:"file";s:115:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AutowireRequiredMethodsPass.php";s:4:"line";i:62;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:109:"C:\Users\LENOVO\Desktop\New folder (2)\vendor\symfony\dependency-injection\Compiler\AbstractRecursivePass.php";s:4:"line";i:90;s:8:"function";s:12:"processValue";s:5:"class";s:74:"Symfony\Component\DependencyInjection\Compiler\AutowireRequiredMethodsPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}