<?php

namespace ContainerRyXp5ka;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTranslationControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Lexik\Bundle\TranslationBundle\Controller\TranslationController' shared autowired service.
     *
     * @return \Lexik\Bundle\TranslationBundle\Controller\TranslationController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'AbstractController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'lexik'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Util'.\DIRECTORY_SEPARATOR.'Csrf'.\DIRECTORY_SEPARATOR.'CsrfCheckerTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'lexik'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'TranslationController.php';

        $container->services['Lexik\\Bundle\\TranslationBundle\\Controller\\TranslationController'] = $instance = new \Lexik\Bundle\TranslationBundle\Controller\TranslationController(($container->services['lexik_translation.translation_storage'] ?? $container->load('getLexikTranslation_TranslationStorageService')), ($container->services['lexik_translation.overview.stats_aggregator'] ?? $container->load('getLexikTranslation_Overview_StatsAggregatorService')), ($container->services['lexik_translation.form.handler.trans_unit'] ?? $container->load('getLexikTranslation_Form_Handler_TransUnitService')), new \Lexik\Bundle\TranslationBundle\Translation\Translator($container, ($container->privates['translator.formatter.default'] ?? self::getTranslator_Formatter_DefaultService($container)), '', [], ['cache_dir' => $container->targetDir.'']), ($container->services['translator'] ?? self::getTranslatorService($container)), ($container->services['Lexik\\Bundle\\TranslationBundle\\Manager\\LocaleManager'] ?? $container->load('getLocaleManagerService')), NULL);

        $instance->setContainer(($container->privates['.service_locator.O2p6Lk7'] ?? $container->load('get_ServiceLocator_O2p6Lk7Service'))->withContext('Lexik\\Bundle\\TranslationBundle\\Controller\\TranslationController', $container));
        $instance->setRequestStack(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()));
        $instance->setTokenManager(NULL);

        return $instance;
    }
}
