{% extends 'temp/admin/base.html.twig' %}

{% block admin_content %}
    <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3">{{ type ? 'Edit Product Type' : 'New Product Type' }}</h1>
            <a href="{{ path('admin_product_types') }}" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Product Types
            </a>
        </div>

        {% for message in app.flashes('success') %}
            <div class="alert alert-success">
                {{ message }}
            </div>
        {% endfor %}

        <div class="card shadow mb-4">
            <div class="card-body">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate', 'id': 'productTypeForm'}}) }}
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                {{ form_label(form.season, 'Season *') }}
                                {{ form_widget(form.season, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    Please select a season.
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                {{ form_label(form.productionMethod, 'Production Method *') }}
                                {{ form_widget(form.productionMethod, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    Please enter a production method.
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                {{ form_label(form.harvestDate, 'Harvest Date *') }}
                                {{ form_widget(form.harvestDate, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    Please select a harvest date.
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                {{ form_label(form.preservationDuration, 'Preservation Duration *') }}
                                {{ form_widget(form.preservationDuration, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    Please enter a preservation duration.
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-end mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> {{ type ? 'Update' : 'Create' }} Product Type
                        </button>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('productTypeForm');
    
    form.addEventListener('submit', function(event) {
        let isValid = true;
        const season = form.querySelector('#product_type_season');
        const productionMethod = form.querySelector('#product_type_productionMethod');
        const harvestDate = form.querySelector('#product_type_harvestDate');
        const preservationDuration = form.querySelector('#product_type_preservationDuration');
        
        // Reset previous validation states
        form.querySelectorAll('.is-invalid').forEach(field => field.classList.remove('is-invalid'));
        
        // Validate each field
        if (!season.value.trim()) {
            season.classList.add('is-invalid');
            isValid = false;
        }
        
        if (!productionMethod.value.trim()) {
            productionMethod.classList.add('is-invalid');
            isValid = false;
        }
        
        if (!harvestDate.value) {
            harvestDate.classList.add('is-invalid');
            isValid = false;
        }
        
        if (!preservationDuration.value.trim()) {
            preservationDuration.classList.add('is-invalid');
            isValid = false;
        }
        
        if (!isValid) {
            event.preventDefault();
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'Please check all required fields and correct any errors.',
                confirmButtonColor: '#3085d6'
            });
        }
    });
    
    // Real-time validation
    form.querySelectorAll('input, select').forEach(field => {
        field.addEventListener('change', function() {
            if (this.value) {
                this.classList.remove('is-invalid');
            }
        });
    });
});
</script>
{% endblock %}
