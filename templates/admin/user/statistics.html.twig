{% extends 'base_back.html.twig' %}

{% block title %}User Statistics by Role{% endblock %}

{% block body %}
<div class="container-fluid">
    <div class="row">
        <!-- Left Sidebar and Navbar -->
        <div class="col-md-2">
            <!-- Include your left sidebar and navbar here -->
        </div>

        <!-- Main Content Section -->
        <div class="col-md-10">
            <div class="container mt-4">
                <h1 class="text-center text-light bg-primary p-3 rounded mb-4">ðŸ“Š Statistiques des utilisateurs par rÃ´le</h1>

                <!-- Statistics Section -->
                <div class="d-flex justify-content-center">
                    <div class="w-50"> <!-- Set the width to 50% to make it smaller -->
                        <canvas id="userChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('userChart').getContext('2d');

    var statsData = {};

    {% for role, count in stats %}
        statsData["{{ role }}"] = {{ count }};
    {% endfor %}

    var roles = Object.keys(statsData);
    var counts = Object.values(statsData);

    var userChart = new Chart(ctx, {
        type: 'pie',  
        data: {
            labels: roles,  
            datasets: [{
                label: 'Number of Users',
                data: counts,  
                backgroundColor: [
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(75, 192, 192, 0.6)'
                ],  
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(75, 192, 192, 1)'
                ],  
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function(tooltipItem) {
                            return tooltipItem.label + ': ' + tooltipItem.raw;  
                        }
                    }
                }
            }
        }
    });
</script>
{% endblock %}
