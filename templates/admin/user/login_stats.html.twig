<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Attempts Stats</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Optional: Add styling to make the chart container responsive */
        .chart-container {
            max-width: 600px;  /* Set a maximum width */
            margin: 0 auto;    /* Center the chart */
        }
    </style>
</head>
<body>
    <h2>User Login Attempts Statistics</h2>

    <!-- Chart Container with smaller canvas -->
    <div class="chart-container">
        <canvas id="loginAttemptsChart" width="400" height="300"></canvas>  <!-- Reduced size -->
    </div>

    <script>
        const ctx = document.getElementById('loginAttemptsChart').getContext('2d');

        const loginAttemptsData = {
            labels: [
                {% for entry in result %}
                    {% if loop.first %}'{{ entry.email }}: {{ entry.loginAttempts }} Attempts'{% else %},
                    '{{ entry.email }}: {{ entry.loginAttempts }} Attempts'
                {% endif %}
                {% endfor %}
            ],
            datasets: [{
                label: 'Login Attempts',
                data: [
                    {% for entry in result %}
                        {{ entry.loginAttempts }}{% if not loop.last %},{% endif %}
                    {% endfor %}
                ],
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        };

        const config = {
            type: 'bar',
            data: loginAttemptsData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return 'User: ' + tooltipItem.label + ' | Attempts: ' + tooltipItem.raw;
                            }
                        }
                    }
                }
            }
        };

        const loginAttemptsChart = new Chart(ctx, config);
    </script>
</body>
</html>
