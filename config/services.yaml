# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    product_images_directory: '%kernel.project_dir%/public/uploads/products'
    images_directory: '%kernel.project_dir%/public/uploads/images'
    avatars_directory: '%kernel.project_dir%/public/uploads/avatars'
    hugging_face_api_token: '%env(HUGGING_FACE_API_TOKEN)%'
    is_arabic_enabled: true   # Change to false if you don't want Arabic

services:
    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Other service definitions...
    App\Service\HuggingFaceService:
        arguments:
            $apiKey: '%env(HUGGING_FACE_API_TOKEN)%'
            $client: '@http_client'

    App\EventListener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    App\Controller\LanguageController:
        arguments:
            $locale: '@request_stack'
        tags: ['controller.service_arguments']
    App\Service\LingvaTranslator:
        arguments: []

    App\Twig\AppExtension:
        arguments:
            $isArabicEnabled: '%is_arabic_enabled%'
        tags:
            - { name: twig.extension }
            
    App\Service\TextGenerationService:
        arguments:
            $client: '@http_client'
            $apiKey: '%env(DEEP_AI_API_KEY)%'

    # CartService example
    mailer_dsn: '%env(MAILER_DSN)%'


# config/services.yaml

# config/services.yaml
    face_images_directory: '%kernel.project_dir%/public/uploads/face_images'
    captured_images_directory: '%kernel.project_dir%/public/uploads/captured_images'
    recaptcha.site_key: '%env(RECAPTCHA_SITE_KEY)%'
    recaptcha.secret_key: '%env(RECAPTCHA_SECRET_KEY)%'
services:
    App\Service\EmailMessageHandler:
        arguments:
            $mailer: '@Symfony\Component\Mailer\MailerInterface'
        tags: ['messenger.message_handler']




    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        
    App\Service\CartService:
        autowire: true
        arguments:
            $session: '@session'

    

        
    Symfony\Component\HttpFoundation\Session\SessionInterface:
        alias: 'session'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\LogoutListener:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $logger: '@logger'
            $security: '@security.helper'
        tags:
            - { name: 'kernel.event_subscriber' }

    App\EventListener\CheckUserStatusListener:
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }

    App\Security\OAuthSuccessHandler:
        arguments:
            $tokenStorage: '@security.token_storage'
            $entityManager: '@doctrine.orm.entity_manager'

    # knpu.oauth2.client.google:
    #     class: KnpU\OAuth2ClientBundle\Client\OAuth2Client
    #     arguments:
    #         - '@knpu.oauth2.registry' # Use the correct registry service
    #         - '%env(OAUTH_GOOGLE_CLIENT_ID)%'
    #         - '%env(OAUTH_GOOGLE_CLIENT_SECRET)%'
    #         - '%env(OAUTH_GOOGLE_REDIRECT_URI)%'

    App\Service\UserStatisticsService:
        public: true

    App\Security\FaceLoginFormAuthenticator:
        arguments:
            $httpClient: '@http_client'
            $entityManager: '@doctrine.orm.entity_manager'
            $urlGenerator: '@router.default'
    App\Service\FaceComparisonService: ~
